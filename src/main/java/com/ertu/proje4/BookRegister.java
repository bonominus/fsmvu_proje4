/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.ertu.proje4;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author ergul
 */
public class BookRegister extends javax.swing.JDialog {

    /**
     * Creates new form BookRegister
     */
    public BookRegister(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        // Initialize the isbn formatter
        try {
            isbn_formatter = new MaskFormatter("#############");
            isbn_formatter.setPlaceholderCharacter('_');
        } catch (ParseException e) {
            e.printStackTrace();
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        authorTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        isbnTF = new javax.swing.JFormattedTextField(isbn_formatter);
        jLabel4 = new javax.swing.JLabel();
        publisherTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        editionSpinner = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        categoryComBox = new javax.swing.JComboBox<>();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Name:");

        jLabel2.setText("Author:");

        jLabel3.setText("ISBN-13:");

        jLabel4.setText("Publisher:");

        jLabel5.setText("Edition:");

        editionSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel6.setText("Category:");

        categoryComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unselected", "Religion", "Science", "Engineering", "Arts", "Literature", "History", "Philosophy" }));

        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(nameTF)
                        .addComponent(authorTF)
                        .addComponent(isbnTF)
                        .addComponent(publisherTF)
                        .addComponent(editionSpinner)
                        .addComponent(categoryComBox, 0, 117, Short.MAX_VALUE)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(authorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(isbnTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(publisherTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(editionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(categoryComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // Check if all the fields are filled. 
        // This is also inline with the user registration.
        // The only differences are the column names and the table the submission is recorded.
        boolean name_filled = !nameTF.getText().isBlank();
        boolean author_filled = !authorTF.getText().isBlank();
        boolean publisher_filled = !publisherTF.getText().isBlank();
        boolean isbn_filled = (isbnTF.getText().equals("_____________")) ? false : true;
        boolean edition_selected = ((Integer)editionSpinner.getValue() == 0) ? false : true;
        boolean category_selected = ((String)categoryComBox.getSelectedItem()).equals("Unselected") ? false : true;
        
        boolean has_error = false;
        String error_message = "";
        
        if (!name_filled) {
            if (!has_error) has_error = true;
            error_message += "Enter the book's name.\n";
        }
        
        if (!author_filled) {
            if (!has_error) has_error = true;
            error_message += "Enter the book's author.\n";
        }
        
        if (!publisher_filled) {
            if (!has_error) has_error = true;
            error_message += "Enter the book's publisher.\n";
        }
        
        if (!isbn_filled) {
            if (!has_error) has_error = true;
            error_message += "Enter the book's ISBN code.\n";
        }
        
        if (!edition_selected) {
            if (!has_error) has_error = true;
            error_message += "Fill the book's edition.\n";
        }
        
        if (!category_selected) {
            if (!has_error) has_error = true;
            error_message += "Select the book's category.\n";
        }
        
        if (has_error) {
            JOptionPane.showMessageDialog(this, error_message, "Error!", JOptionPane.ERROR_MESSAGE);
        } else {
            String book_name = nameTF.getText();
            String book_author = authorTF.getText();
            String book_publisher = publisherTF.getText();
            String book_isbn = isbnTF.getText();
            String book_category = (String)categoryComBox.getSelectedItem();
            Integer book_edition = (Integer)editionSpinner.getValue();
            
            try (Connection conn = DriverManager.getConnection(DBCredentials.db_url, DBCredentials.db_username, 
                DBCredentials.db_password)) {
                
                String query = "INSERT INTO books (name, author, edition, duedate, category, uuid, isbn, publisher) " +
                             "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
                
                try (PreparedStatement statement = conn.prepareStatement(query)) {
                    statement.setString(1, book_name);
                    statement.setString(2, book_author);
                    statement.setInt(3, book_edition);
                    statement.setDate(4, null);
                    statement.setString(5, book_category);
                    statement.setString(6, UUID.randomUUID().toString());
                    statement.setString(7, book_isbn);
                    statement.setString(8, book_publisher);
                    
                    int result = statement.executeUpdate();
                    if (result > 0) {
                        JOptionPane.showMessageDialog(this, "Submitted book successfully.");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to submit the book to database. You might want to contact your sysadmin",
                                "Error!", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(),
                            "Database error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    
    
    private MaskFormatter isbn_formatter;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField authorTF;
    private javax.swing.JComboBox<String> categoryComBox;
    private javax.swing.JSpinner editionSpinner;
    private javax.swing.JFormattedTextField isbnTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField nameTF;
    private javax.swing.JTextField publisherTF;
    // End of variables declaration//GEN-END:variables
}
